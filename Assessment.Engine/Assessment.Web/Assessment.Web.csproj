<Project Sdk="Microsoft.NET.Sdk.Web">

    <PropertyGroup>
        <TargetFramework>net461</TargetFramework>
        <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
        <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
        <IsPackable>false</IsPackable>
        <SpaRoot>ClientApp\</SpaRoot>
        <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
        <BuildServerSideRenderer>false</BuildServerSideRenderer>
        <Description>ASPNET Core - Angular4 startup template for Quick Application development</Description>
        <Configurations>Debug;Release;ReleaseDebug</Configurations>
        <Platforms>AnyCPU;x64</Platforms>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="AspNet.Security.OAuth.Validation" Version="2.0.0-rc2-final" />
        <PackageReference Include="AutoMapper" Version="6.2.2" />
        <PackageReference Include="Costura.Fody" Version="2.0.0" />
        <PackageReference Include="FluentValidation.AspNetCore" Version="7.5.0" />
        <PackageReference Include="Libuv" Version="1.10.0" />
        <PackageReference Include="MailKit" Version="2.0.1" />
        <PackageReference Include="Microsoft.AspNetCore.Authentication.JwtBearer" Version="2.0.3" />
        <PackageReference Include="Microsoft.AspNetCore.Diagnostics" Version="2.0.2" />
        <PackageReference Include="Microsoft.AspNetCore.Hosting" Version="2.0.2" />
        <PackageReference Include="Microsoft.AspNetCore.Server.Kestrel" Version="2.0.2" />
        <PackageReference Include="Microsoft.AspNetCore.Server.Kestrel.Https" Version="2.0.2" />
        <PackageReference Include="Microsoft.AspNetCore.SignalR" Version="1.0.0-preview2-final" />
        <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="2.0.0" />
        <PackageReference Include="Microsoft.Extensions.Logging.Debug" Version="2.0.1" />
        <PackageReference Include="OpenIddict" Version="2.0.0-rc2-final" />
        <PackageReference Include="OpenIddict.EntityFrameworkCore" Version="2.0.0-rc2-final" />
        <PackageReference Include="OpenIddict.Mvc" Version="2.0.0-rc2-final" />
        <PackageReference Include="Serilog.Extensions.Logging.File" Version="1.1.0" />
        <PackageReference Include="Swashbuckle.AspNetCore" Version="2.1.0" />
    </ItemGroup>

    <ItemGroup>
        <DotNetCliToolReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Tools" Version="2.0.2" />
        <DotNetCliToolReference Include="Microsoft.EntityFrameworkCore.Tools.DotNet" Version="2.0.1" />
    </ItemGroup>

    <ItemGroup>
        <!-- Don't publish the SPA source files, but do show them in the project files list -->
        <Content Remove="$(SpaRoot)**" />
        <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
    </ItemGroup>

    <ItemGroup>
        <None Remove="Resources\localhost.pfx" />
    </ItemGroup>

    <ItemGroup>
        <EmbeddedResource Include="Resources\localhost.pfx" />
        <EmbeddedResource Include="clientapp\dist\**\*.*" />
        <EmbeddedResource Include="Views\**\*.*" Condition="$(Configuration.Contains('Release'))" />
    </ItemGroup>

    <ItemGroup>
        <ProjectReference Include="..\Assessment.Engine\Assessment.Engine.csproj" />
    </ItemGroup>

    <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
        <!-- Ensure Node.js is installed -->
        <Exec Command="node --version" ContinueOnError="true">
            <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
        </Exec>
        <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
        <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    </Target>

    <Target Name="Test" BeforeTargets="Build">
        <Message Text="Test" Importance="high" />
    </Target>

    <Target Name="ReleaseDebugTest" BeforeTargets="Build" Condition=" '$(Configuration)' == 'ReleaseDebug' ">
        <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" Condition="!Exists('$(SpaRoot)node_modules')" />
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build" />
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:ssr " Condition=" '$(BuildServerSideRenderer)' == 'true' " />
    </Target>

    <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
        <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --prod" />
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:ssr -- --prod" Condition=" '$(BuildServerSideRenderer)' == 'true' " />

        <!-- Include the newly-built files in the publish output -->
        <ItemGroup>
            <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
            <DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'" />
            <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
                <RelativePath>%(DistFiles.Identity)</RelativePath>
                <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
            </ResolvedFileToPublish>
        </ItemGroup>
    </Target>
</Project>